import { Mesh } from "../../Core/Render/Mesh";

export class CubeMesh extends Mesh {
  // TODO: Add a constructor to Mesh class. Dynamically generate the vertex positions, normals, colors, and texture coordinates.

  vertexPositions = new Float32Array(
    [
      [1, 1, 1],
      [-1, 1, 1],
      [-1, -1, 1],
      [1, -1, 1],
      [1, 1, 1],
      [1, -1, 1],
      [1, -1, -1],
      [1, 1, -1],
      [1, 1, 1],
      [1, 1, -1],
      [-1, 1, -1],
      [-1, 1, 1],
      [-1, 1, 1],
      [-1, 1, -1],
      [-1, -1, -1],
      [-1, -1, 1],
      [-1, -1, -1],
      [1, -1, -1],
      [1, -1, 1],
      [-1, -1, 1],
      [1, -1, -1],
      [-1, -1, -1],
      [-1, 1, -1],
      [1, 1, -1],
    ].flat()
  );

  vertexNormals = new Float32Array(
    [
      [0, 0, 1],
      [0, 0, 1],
      [0, 0, 1],
      [0, 0, 1],
      [1, 0, 0],
      [1, 0, 0],
      [1, 0, 0],
      [1, 0, 0],
      [0, 1, 0],
      [0, 1, 0],
      [0, 1, 0],
      [0, 1, 0],
      [-1, 0, 0],
      [-1, 0, 0],
      [-1, 0, 0],
      [-1, 0, 0],
      [0, -1, 0],
      [0, -1, 0],
      [0, -1, 0],
      [0, -1, 0],
      [0, 0, -1],
      [0, 0, -1],
      [0, 0, -1],
      [0, 0, -1],
    ].flat()
  );

  vertexColors = new Float32Array(
    [
      [0, 0, 1, 1],
      [0, 0, 1, 1],
      [0, 0, 1, 1],
      [0, 0, 1, 1],
      [1, 0, 0, 1],
      [1, 0, 0, 1],
      [1, 0, 0, 1],
      [1, 0, 0, 1],
      [0, 1, 0, 1],
      [0, 1, 0, 1],
      [0, 1, 0, 1],
      [0, 1, 0, 1],
      [1, 1, 0, 1],
      [1, 1, 0, 1],
      [1, 1, 0, 1],
      [1, 1, 0, 1],
      [1, 0, 1, 1],
      [1, 0, 1, 1],
      [1, 0, 1, 1],
      [1, 0, 1, 1],
      [0, 1, 1, 1],
      [0, 1, 1, 1],
      [0, 1, 1, 1],
      [0, 1, 1, 1],
    ].flat()
  );

  vertexTexCoords = new Float32Array(
    [
      [0, 0],
      [1, 0],
      [1, 1],
      [0, 1],
      [1, 0],
      [1, 1],
      [0, 1],
      [0, 0],
      [0, 1],
      [0, 0],
      [1, 0],
      [1, 1],
      [0, 0],
      [1, 0],
      [1, 1],
      [0, 1],
      [1, 1],
      [0, 1],
      [0, 0],
      [1, 0],
      [1, 1],
      [0, 1],
      [0, 0],
      [1, 0],
    ].flat()
  );

  triangleIndices = new Uint16Array(
    [
      [0, 1, 2],
      [0, 2, 3], // front
      [4, 5, 6],
      [4, 6, 7], // right
      [8, 9, 10],
      [8, 10, 11], // top
      [12, 13, 14],
      [12, 14, 15], // left
      [16, 17, 18],
      [16, 18, 19], // bottom
      [20, 21, 22],
      [20, 22, 23], // back
    ].flat()
  );
  constructor(x: number = 1, y: number = 1, z: number = 1) {
    super();

    this.vertexPositions = new Float32Array(
      [
        [x, y, z],
        [-x, y, z],
        [-x, -y, z],
        [x, -y, z],
        [x, y, z],
        [x, -y, z],
        [x, -y, -z],
        [x, y, -z],
        [x, y, z],
        [x, y, -z],
        [-x, y, -z],
        [-x, y, z],
        [-x, y, z],
        [-x, y, -z],
        [-x, -y, -z],
        [-x, -y, z],
        [-x, -y, -z],
        [x, -y, -z],
        [x, -y, z],
        [-x, -y, z],
        [x, -y, -z],
        [-x, -y, -z],
        [-x, y, -z],
        [x, y, -z],
      ].flat()
    );
  }
}
